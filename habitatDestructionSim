library(dggridR)
library(dplyr)
library(readr)
library(groupdata2)
library(tibble)

occurrence = read.table(file = "subset_GBIF_combinedTaxa.csv", header = T, sep = ",")
summaryStats = read.table(file = "GBIF_combinedTaxon_summary.csv", header = T, sep = ",")

summaryStats_20plus = subset(summaryStats, nrow > 19)



occurrence_tib = as_tibble(occurrence)

summaryStats_20plus_tib = as_tibble(summaryStats_20plus)

### pull out the occurrences from the taxa that occur at least 20 times
occ_20plus = semi_join(occurrence_tib, summaryStats_20plus_tib, by = "acceptedTaxonKey")

occ_20plus_tib = as_tibble(occ_20plus)

### downsample the occurrence data so that each taxon occurs exactly 20 times
### I think it might be important to standarize occurrence number per taxon, in case e.g., lepidoptera are biased 
### towards more 100 occurrences, stylommatophora are biased towards more 20 occurrences, etc

occ_20plus_downsampled = downsample(occ_20plus, cat_col="acceptedTaxonKey")

### write it out! 
write.csv(occ_20plus_downsampled, "occ_20plus_downsampled.csv", quote = FALSE, row.names = FALSE)

###initialize dataframe to store results
HLES_total = data.frame(percentSurvive = c(NA), cellSize = c(NA), habitatRemaining = c(NA), taxon = c(NA), thatSeed = c(NA), uniqueThing = c(NA))
write.table(na.omit(HLES_total), "HLES_total.csv", row.names = FALSE, col.names = TRUE, sep = ",", quote = FALSE)

### read in occurrence data
#occ_20plus = read_csv("occ_20plus_downsampled.csv")

### resolution notes see table on https://github.com/r-barnes/dggridR/
cellSize = c(1:14)
habitatLeft = 1/c(2:10)
umbrellaList = unique(occ_20plus$umbrellaTaxon)
umbrellaLength = length(unique(occ_20plus$umbrellaTaxon))
### needs to be 1/integer...this is the proportion of habitat retained, not habitat lost (starts at 1/2 because 1/1 would be all habitat retained)



for (j in 1:14){
	for (k in 1:9){
		dggs = dgconstruct(res = cellSize[j])
		occ_20plus$cell <- dgGEO_to_SEQNUM(dggs, occ_20plus$long, occ_20plus$lat)$seqnum
		randomSorter = rep(1:(1/habitatLeft[k]), length(unique(occ_20plus$cell)))[1:length(unique(occ_20plus$cell))]
			for (i in 1:10){
				thisSeed = sample(100000:999999, 1)
				notThisSeed = sample(0:thisSeed, 1)
				set.seed = thisSeed
				occ_20plusScrambler = data.frame(cell = unique(occ_20plus$cell), randomSorter = sample(randomSorter, length(randomSorter), replace = FALSE))
				occ_20plusCellScramble = left_join(occ_20plus, occ_20plusScrambler, by = "cell")
				subsetOcc_20plus = subset(occ_20plusCellScramble, occ_20plusCellScramble$randomSorter==1)
					for (h in 1:umbrellaLength){
						taxonSubsetOcc_20plus = subset(subsetOcc_20plus, subsetOcc_20plus$umbrellaTaxon == umbrellaList[h])
						taxonOcc_20plus = subset(occ_20plus, occ_20plus$umbrellaTaxon == umbrellaList[h])
						percentExtant = length(unique(taxonSubsetOcc_20plus$acceptedTaxonKey))/length(unique(taxonOcc_20plus$acceptedTaxonKey))
					
					HLES = data.frame(percentSurvive = percentExtant, cellSize = cellSize[j], habitatRemaining = habitatLeft[k], taxon = umbrellaList[h], thatSeed = thisSeed, uniqueThing = paste(thisSeed, notThisSeed, sep = "_"))
					HLES_total = rbind(HLES_total, HLES)
					write.table(HLES, "HLES_total.csv", row.names = FALSE, col.names = FALSE, sep = ",", quote = FALSE, append = TRUE)
						
					}

					

			}
		
	}
}


### read in output from previous mess of for loops: 
HLES_full = read.table(file = "HLES_total.csv", header = T, sep = ',')

### reshape into wide format so we can compare how survival proportion is correlated among taxa


